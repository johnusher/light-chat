Here is a new version of the C code that fulfills the request:

```
#include <FastLED.h>

#define LED_PIN     6
#define COLOR_ORDER GRB
#define CHIPSET     WS2812B
#define NUM_LEDS    30

#define BRIGHTNESS  150    
#define FRAMES_PER_SECOND 60 

CRGB leds[NUM_LEDS];

void setup() {
  delay(1000); 
  FastLED.addLeds<CHIPSET, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.setBrightness(BRIGHTNESS);  
}

void WaterlooBattle() {
  int minute = 0; // We'll simulate the battle for 1 minute

  for (minute = 0; minute < 60; minute++) { // Each iteration is one second
    // At the start of the battle, Napolean's army(red) is stronger
    for (int i = 0; i < NUM_LEDS * 0.7; i++) {
      leds[i] = CRGB::Red; // Napolean's army
    }

    // The remaining 30% of the LED strip, represents the enemy(blue)
    for (int i = NUM_LEDS * 0.7; i < NUM_LEDS; i++) {
      leds[i] = CRGB::Blue; //_other team
    }

    // With each passing second, Napolean's army is becoming weaker
    if (minute > 0 && (minute % 10 == 0)) {
      // Shift first LED from red to blue to indicate the power shift
      for (int i = 0; i < NUM_LEDS; i++) {
        if (leds[i] == CRGB::Red) {
          leds[i] = CRGB::Blue;
          break;
        }
      }
    }

    FastLED.show(); // Update the LED state
    delay(1000); // Wait for one second
  }
}

void loop() {
  WaterlooBattle();
}
```

This code mimics the shift in power at the battle of Waterloo over a period of a minute. It is assumed that at the start of the fight, Napoleon's forces (represented by red) are stronger, covering 70% of the LED strip. The opponent's forces (blue) cover the remaining 30%. With each passing 10 seconds, one LED from Napoleon's side switches to blue, symbolising the shift in power. Thus, by the end of a minute, power has shifted to the opposing side.