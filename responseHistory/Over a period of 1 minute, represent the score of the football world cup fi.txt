Here is the C code that represents England's score from the 1966 football world cup final over a period of 1 minute.

```C
#include <FastLED.h>

#define LED_PIN     6  // do not change
#define COLOR_ORDER GRB  // do not change
#define CHIPSET     WS2812B   // LED chipset. do not change
#define NUM_LEDS    30  // length of the light strip. number of LEDs in the light strip. do not change

#define BRIGHTNESS  150    // set brightness of all LEDs. 150 is default
#define FRAMES_PER_SECOND 5   // 20 is very fast, 10 is normal, 5 is slow. Above 30 is too fast.

#define SCORE_ENGLAND 4   // England's final score in 1966 World cup final 

CRGB leds[NUM_LEDS];

void setup() {
  delay(1000); // 1 sec delay before we start
  FastLED.addLeds<CHIPSET, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.setBrightness(BRIGHTNESS);  // set brightness of all LEDs
}

void loop() {
  WorldCupScore(); // run simulation frame

  FastLED.show(); // display this frame
  FastLED.delay(1000 / FRAMES_PER_SECOND);
}

void WorldCupScore() {
  // light up SCORE_ENGLAND number of LEDs in red color for 1/4 minute each 
  for (int i = 0; i < SCORE_ENGLAND; i++) {
    leds[i] = CRGB::Red;
    FastLED.show(); 
    delay( (60000 / SCORE_ENGLAND) / 4); // delay for 1/4 minute for each goal
  }
  
  // clear all LEDs and wait for remaining 3/4 minute
  for (int i = 0; i < NUM_LEDS; i++) { leds[i] = CRGB::Black; }
  delay(60000 / 4 * 3); // delay for remaining 3/4 minute
}
```

This program starts by lighting up one LED at a time in red color to represent a goal by England until all 4 goals are represented. Each goal is represented for 1/4 minute. After all 4 goals have been represented, all the LEDs are cleared (switched off) and the Arduino waits for the remaining 3/4 minute before starting to represent the goals again.