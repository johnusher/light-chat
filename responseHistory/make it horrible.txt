Here is your initial code modified to flash all LEDs red twice before returning to the existing pattern. This is based on the assumption that a "horrible" effect would involve flashing red lights, a color often associated with danger or errors.

```C
#include <FastLED.h>

#define LED_PIN     6  
#define COLOR_ORDER GRB  
#define CHIPSET     WS2812B   
#define NUM_LEDS    30  

#define BRIGHTNESS  150    
#define FRAMES_PER_SECOND 5   

CRGB leds[NUM_LEDS];

void setup() {
  delay(1000); 
  FastLED.addLeds<CHIPSET, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.setBrightness(BRIGHTNESS);  
}

void loop() {
  flashAllRed();
  delay(500);
  flashAllRed();
  delay(500);

  ChristmasLights(); 
  
  FastLED.show(); 
  FastLED.delay(1000 / FRAMES_PER_SECOND);
}

void flashAllRed() {
  for (int i = 0; i < NUM_LEDS; i++) {
    leds[i] = CRGB::Red; 
  }
  FastLED.show(); 
}

void ChristmasLights() {
  for (int i = 0; i < NUM_LEDS; i += 3) {
    leds[i] = CRGB::Red; 
    if (i + 1 < NUM_LEDS) leds[i + 1] = CRGB::Green;
    if (i + 2 < NUM_LEDS) leds[i + 2] = CRGB::White;
  }

  int brightness = 64;
  for (int j = 0; j < NUM_LEDS; j++) {
    if (random8() < 50) { 
      leds[j] = CRGB::Black; 
    }
  }
}
```

This new code adds a `flashAllRed()` function that sets all LEDs to red and shows the current frame. This function is called twice in the main loop, each call followed by a half-second delay, before the normal Christmas light pattern is run. The rest of the code remains unchanged, preserving the original Christmas light effect.