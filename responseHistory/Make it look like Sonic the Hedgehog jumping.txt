```C++
#include <FastLED.h>

#define LED_PIN     6  
#define COLOR_ORDER GRB  
#define CHIPSET     WS2812B   
#define NUM_LEDS    30  

#define BRIGHTNESS  255    
#define FRAMES_PER_SECOND 30   

CRGB leds[NUM_LEDS];

void setup() {
  delay(1000); // sanity delay
  FastLED.addLeds<CHIPSET, LED_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
  FastLED.setBrightness(BRIGHTNESS);  
}

void loop() {
  SonicJump(); // run simulation frame
  
  FastLED.show(); 
  FastLED.delay(1000 / FRAMES_PER_SECOND);
}

void SonicJump() {
  static uint8_t step = 0;

  // Sonic color (Blue)
  for (int i = 0; i < NUM_LEDS; i++) {
    leds[i] = CRGB::Blue;
  }

  // Sonic jump (White streak)
  int startPos = (step % NUM_LEDS);
  if (startPos < NUM_LEDS / 2) {
    leds[startPos] = CRGB::White;
    if (startPos > 0) leds[startPos - 1] = CRGB::White;
  } else {
    int pos = NUM_LEDS - 1  - (startPos - NUM_LEDS / 2);
    leds[pos] = CRGB::White;
    if (pos < NUM_LEDS - 1) leds[pos + 1] = CRGB::White;
  }

  step++;
}
```
This code was implemented to give the effect similar to Sonic the Hedgehog jumping. LED strip is filled with blue color representing Sonic. During each loop iteration, a white colored streak is moved across the strip to mimic the jumping effect of Sonic. The position of the streak starts from one end of the strip, moves to the middle of the strip, and then moves back towards the end, mimicking Sonic's jump arc. One LED is lit white at the start or end and two LEDs when it is in the middle to give a better jumping effect. The rest of the strip remains Sonic blue. This function operates continuously simulating Sonic jumping continuously.
